The main code is in class Check, it extend RecursiveTask which can invoke multiple threads, recursively run compute()

1. private final NFA nfa;
It is NFA object

2.  private  LinkedBlockingQueue<String> discovered;
It stores string as "query!state" which represents states that were discovered.

3. private  LinkedBlockingQueue<String> queue;
It is frontier queue for bfs.

4. @Override compute()
Poll the queue. Check the state and add it's adjacent states into queue and create a new Check instance for each adjacent state.
At last, invoke all possible check and return the result of it.

5. boolean match(String s, int nthreads) in class NFA
Create new ForkJoinPool to execute threads and first invoke a check object for startState. After computation, the start Check instance's result shows the result of matching.